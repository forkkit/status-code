{"id":"../../node_modules/ramda/es/isEmpty.js","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/isEmpty.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry1.js"},{"name":"./empty.js","loc":{"line":2,"column":18},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/isEmpty.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/empty.js"},{"name":"./equals.js","loc":{"line":3,"column":19},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/isEmpty.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/equals.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nvar _empty = _interopRequireDefault(require(\"./empty.js\"));\n\nvar _equals = _interopRequireDefault(require(\"./equals.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/(0, _curry.default)(function isEmpty(x) {\n  return x != null && (0, _equals.default)(x, (0, _empty.default)(x));\n});\nvar _default = isEmpty;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":5,"column":0}},{"generated":{"line":37,"column":0},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":0}},{"name":"isEmpty","generated":{"line":37,"column":4},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":4}},{"generated":{"line":37,"column":11},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":11}},{"generated":{"line":37,"column":14},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":14}},{"generated":{"line":37,"column":27},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":27}},{"generated":{"line":37,"column":47},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":35}},{"name":"isEmpty","generated":{"line":37,"column":56},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":44}},{"generated":{"line":37,"column":63},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":35}},{"name":"x","generated":{"line":37,"column":64},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":52}},{"generated":{"line":37,"column":65},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":35}},{"generated":{"line":37,"column":67},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":55}},{"generated":{"line":38,"column":0},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":2}},{"name":"x","generated":{"line":38,"column":9},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":9}},{"generated":{"line":38,"column":10},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":10}},{"generated":{"line":38,"column":14},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":14}},{"generated":{"line":38,"column":18},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":9}},{"generated":{"line":38,"column":22},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":22}},{"name":"x","generated":{"line":38,"column":43},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":29}},{"generated":{"line":38,"column":44},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":22}},{"generated":{"line":38,"column":46},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":32}},{"name":"x","generated":{"line":38,"column":66},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":38}},{"generated":{"line":38,"column":67},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":32}},{"generated":{"line":38,"column":68},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":22}},{"generated":{"line":38,"column":69},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":27,"column":2}},{"generated":{"line":39,"column":0},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":28,"column":1}},{"generated":{"line":39,"column":1},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":27}},{"generated":{"line":39,"column":2},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":26,"column":0}},{"name":"isEmpty","generated":{"line":40,"column":15},"source":"../../node_modules/ramda/es/isEmpty.js","original":{"line":29,"column":15}}],"sources":{"../../node_modules/ramda/es/isEmpty.js":"import _curry1 from './internal/_curry1.js';\nimport empty from './empty.js';\nimport equals from './equals.js';\n\n/**\n * Returns `true` if the given value is its type's empty value; `false`\n * otherwise.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Logic\n * @sig a -> Boolean\n * @param {*} x\n * @return {Boolean}\n * @see R.empty\n * @example\n *\n *      R.isEmpty([1, 2, 3]);   //=> false\n *      R.isEmpty([]);          //=> true\n *      R.isEmpty('');          //=> true\n *      R.isEmpty(null);        //=> false\n *      R.isEmpty({});          //=> true\n *      R.isEmpty({length: 0}); //=> false\n */\nvar isEmpty = /*#__PURE__*/_curry1(function isEmpty(x) {\n  return x != null && equals(x, empty(x));\n});\nexport default isEmpty;"},"lineCount":null}},"error":null,"hash":"6d0f1923500d39de2174c9af0ec1c4a2","cacheData":{"env":{}}}