{"id":"qhKs","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./slice.js","loc":{"line":1,"column":18},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/init.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/slice.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=t(require(\"./slice.js\"));function t(e){return e&&e.__esModule?e:{default:e}}var r=(0,e.default)(0,-1),u=r;exports.default=u;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":13}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":20}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":35}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":43}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":56}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":57}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":64}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":68}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":76}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":89}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":122}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":131}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":133}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":136}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":143}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":146}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":148}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":159}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":161}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":162}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":170}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":27,"column":0},"generated":{"line":1,"column":173}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":27,"column":4},"generated":{"line":1,"column":177}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":27,"column":24},"generated":{"line":1,"column":180}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":27,"column":30},"generated":{"line":1,"column":182}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":27,"column":30},"generated":{"line":1,"column":184}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":27,"column":30},"generated":{"line":1,"column":193}},{"source":"../../node_modules/ramda/es/init.js","original":{"line":27,"column":34},"generated":{"line":1,"column":196}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":199}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":201}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":203}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":211}},{"source":"../../node_modules/ramda/es/init.js","name":"init","original":{"line":28,"column":15},"generated":{"line":1,"column":219}}],"sources":{"../../node_modules/ramda/es/init.js":"import slice from './slice.js';\n\n/**\n * Returns all but the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.last, R.head, R.tail\n * @example\n *\n *      R.init([1, 2, 3]);  //=> [1, 2]\n *      R.init([1, 2]);     //=> [1]\n *      R.init([1]);        //=> []\n *      R.init([]);         //=> []\n *\n *      R.init('abc');  //=> 'ab'\n *      R.init('ab');   //=> 'a'\n *      R.init('a');    //=> ''\n *      R.init('');     //=> ''\n */\nvar init = /*#__PURE__*/slice(0, -1);\nexport default init;"},"lineCount":null}},"error":null,"hash":"dd68136a4dec2d55c18b28cdf78a93e7","cacheData":{"env":{}}}