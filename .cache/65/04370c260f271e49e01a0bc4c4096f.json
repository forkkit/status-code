{"id":"NdeX","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./composeK.js","loc":{"line":1,"column":21},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/pipeK.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/composeK.js"},{"name":"./reverse.js","loc":{"line":2,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/pipeK.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/reverse.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=u;var e=t(require(\"./composeK.js\")),r=t(require(\"./reverse.js\"));function t(e){return e&&e.__esModule?e:{default:e}}function u(){if(0===arguments.length)throw new Error(\"pipeK requires at least one argument\");return e.default.apply(this,(0,r.default)(arguments))}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":13}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":20}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":35}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":43}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":56}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":57}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":64}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":68}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":76}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":84}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":86}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":92}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":1,"column":0},"generated":{"line":1,"column":102}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":2,"column":0},"generated":{"line":1,"column":120}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":2,"column":0},"generated":{"line":1,"column":122}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":2,"column":0},"generated":{"line":1,"column":124}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":2,"column":0},"generated":{"line":1,"column":132}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":149}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":158}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":160}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":163}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":170}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":173}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":175}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":186}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":188}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":189}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":44,"column":1},"generated":{"line":1,"column":197}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":39,"column":15},"generated":{"line":1,"column":200}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"pipeK","original":{"line":39,"column":24},"generated":{"line":1,"column":209}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":40,"column":6},"generated":{"line":1,"column":213}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":40,"column":27},"generated":{"line":1,"column":216}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":40,"column":6},"generated":{"line":1,"column":220}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"length","original":{"line":40,"column":16},"generated":{"line":1,"column":230}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":41,"column":10},"generated":{"line":1,"column":237}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":41,"column":10},"generated":{"line":1,"column":243}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"Error","original":{"line":41,"column":14},"generated":{"line":1,"column":247}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":41,"column":20},"generated":{"line":1,"column":253}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"composeK","original":{"line":43,"column":9},"generated":{"line":1,"column":293}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"composeK","original":{"line":43,"column":9},"generated":{"line":1,"column":300}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"apply","original":{"line":43,"column":18},"generated":{"line":1,"column":302}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"apply","original":{"line":43,"column":18},"generated":{"line":1,"column":310}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":24},"generated":{"line":1,"column":316}},{"source":"../../node_modules/ramda/es/pipeK.js","original":{"line":43,"column":30},"generated":{"line":1,"column":322}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":43,"column":38},"generated":{"line":1,"column":324}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":43,"column":38},"generated":{"line":1,"column":326}},{"source":"../../node_modules/ramda/es/pipeK.js","name":"arguments","original":{"line":43,"column":38},"generated":{"line":1,"column":335}}],"sources":{"../../node_modules/ramda/es/pipeK.js":"import composeK from './composeK.js';\nimport reverse from './reverse.js';\n\n/**\n * Returns the left-to-right Kleisli composition of the provided functions,\n * each of which must return a value of a type supported by [`chain`](#chain).\n *\n * `R.pipeK(f, g, h)` is equivalent to `R.pipe(f, R.chain(g), R.chain(h))`.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category Function\n * @sig Chain m => ((a -> m b), (b -> m c), ..., (y -> m z)) -> (a -> m z)\n * @param {...Function}\n * @return {Function}\n * @see R.composeK\n * @deprecated since v0.26.0\n * @example\n *\n *      //  parseJson :: String -> Maybe *\n *      //  get :: String -> Object -> Maybe *\n *\n *      //  getStateCode :: Maybe String -> Maybe String\n *      const getStateCode = R.pipeK(\n *        parseJson,\n *        get('user'),\n *        get('address'),\n *        get('state'),\n *        R.compose(Maybe.of, R.toUpper)\n *      );\n *\n *      getStateCode('{\"user\":{\"address\":{\"state\":\"ny\"}}}');\n *      //=> Just('NY')\n *      getStateCode('[Invalid JSON]');\n *      //=> Nothing()\n * @symb R.pipeK(f, g, h)(a) = R.chain(h, R.chain(g, f(a)))\n */\nexport default function pipeK() {\n  if (arguments.length === 0) {\n    throw new Error('pipeK requires at least one argument');\n  }\n  return composeK.apply(this, reverse(arguments));\n}"},"lineCount":null}},"error":null,"hash":"2427233767b1962eb4d679646a94d77e","cacheData":{"env":{}}}