{"id":"../../node_modules/ramda/es/update.js","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/update.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry3.js"},{"name":"./adjust.js","loc":{"line":2,"column":19},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/update.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/adjust.js"},{"name":"./always.js","loc":{"line":3,"column":19},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/update.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/always.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nvar _adjust = _interopRequireDefault(require(\"./adjust.js\"));\n\nvar _always = _interopRequireDefault(require(\"./always.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/(0, _curry.default)(function update(idx, x, list) {\n  return (0, _adjust.default)(idx, (0, _always.default)(x), list);\n});\nvar _default = update;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/ramda/es/update.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/ramda/es/update.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/ramda/es/update.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"../../node_modules/ramda/es/update.js","original":{"line":5,"column":0}},{"generated":{"line":38,"column":0},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":0}},{"name":"update","generated":{"line":38,"column":4},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":4}},{"generated":{"line":38,"column":10},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":10}},{"generated":{"line":38,"column":13},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":13}},{"generated":{"line":38,"column":26},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":26}},{"generated":{"line":38,"column":46},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":34}},{"name":"update","generated":{"line":38,"column":55},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":43}},{"generated":{"line":38,"column":61},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":34}},{"name":"idx","generated":{"line":38,"column":62},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":50}},{"generated":{"line":38,"column":65},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":34}},{"name":"x","generated":{"line":38,"column":67},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":55}},{"generated":{"line":38,"column":68},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":34}},{"name":"list","generated":{"line":38,"column":70},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":58}},{"generated":{"line":38,"column":74},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":34}},{"generated":{"line":38,"column":76},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":64}},{"generated":{"line":39,"column":0},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":2}},{"generated":{"line":39,"column":9},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":9}},{"name":"idx","generated":{"line":39,"column":30},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":16}},{"generated":{"line":39,"column":33},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":9}},{"generated":{"line":39,"column":35},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":21}},{"name":"x","generated":{"line":39,"column":56},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":28}},{"generated":{"line":39,"column":57},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":21}},{"generated":{"line":39,"column":58},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":9}},{"name":"list","generated":{"line":39,"column":60},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":32}},{"generated":{"line":39,"column":64},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":9}},{"generated":{"line":39,"column":65},"source":"../../node_modules/ramda/es/update.js","original":{"line":28,"column":2}},{"generated":{"line":40,"column":0},"source":"../../node_modules/ramda/es/update.js","original":{"line":29,"column":1}},{"generated":{"line":40,"column":1},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":26}},{"generated":{"line":40,"column":2},"source":"../../node_modules/ramda/es/update.js","original":{"line":27,"column":0}},{"name":"update","generated":{"line":41,"column":15},"source":"../../node_modules/ramda/es/update.js","original":{"line":30,"column":15}}],"sources":{"../../node_modules/ramda/es/update.js":"import _curry3 from './internal/_curry3.js';\nimport adjust from './adjust.js';\nimport always from './always.js';\n\n/**\n * Returns a new copy of the array with the element at the provided index\n * replaced with the given value.\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category List\n * @sig Number -> a -> [a] -> [a]\n * @param {Number} idx The index to update.\n * @param {*} x The value to exist at the given index of the returned array.\n * @param {Array|Arguments} list The source array-like object to be updated.\n * @return {Array} A copy of `list` with the value at index `idx` replaced with `x`.\n * @see R.adjust\n * @example\n *\n *      R.update(1, '_', ['a', 'b', 'c']);      //=> ['a', '_', 'c']\n *      R.update(-1, '_', ['a', 'b', 'c']);     //=> ['a', 'b', '_']\n * @symb R.update(-1, a, [b, c]) = [b, a]\n * @symb R.update(0, a, [b, c]) = [a, c]\n * @symb R.update(1, a, [b, c]) = [b, a]\n */\nvar update = /*#__PURE__*/_curry3(function update(idx, x, list) {\n  return adjust(idx, always(x), list);\n});\nexport default update;"},"lineCount":null}},"error":null,"hash":"b7e7addbb4c261fe0fb41a45feb18fdd","cacheData":{"env":{}}}