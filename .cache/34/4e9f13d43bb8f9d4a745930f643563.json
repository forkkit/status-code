{"id":"../../node_modules/ramda/es/takeWhile.js","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/takeWhile.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry2.js"},{"name":"./internal/_dispatchable.js","loc":{"line":2,"column":26},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/takeWhile.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_dispatchable.js"},{"name":"./internal/_xtakeWhile.js","loc":{"line":3,"column":24},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/takeWhile.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_xtakeWhile.js"},{"name":"./slice.js","loc":{"line":4,"column":18},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/takeWhile.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/slice.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\n\nvar _xtakeWhile2 = _interopRequireDefault(require(\"./internal/_xtakeWhile.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/(0, _curry.default)( /*#__PURE__*/(0, _dispatchable2.default)(['takeWhile'], _xtakeWhile2.default, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n\n  return (0, _slice.default)(0, idx, xs);\n}));\nvar _default = takeWhile;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":6,"column":0}},{"generated":{"line":47,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":0}},{"name":"takeWhile","generated":{"line":47,"column":4},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":4}},{"generated":{"line":47,"column":13},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":13}},{"generated":{"line":47,"column":16},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":16}},{"generated":{"line":47,"column":29},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":29}},{"generated":{"line":47,"column":50},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":38}},{"generated":{"line":47,"column":63},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":51}},{"generated":{"line":47,"column":91},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":65}},{"generated":{"line":47,"column":92},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":66}},{"generated":{"line":47,"column":103},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":65}},{"generated":{"line":47,"column":104},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":51}},{"name":"_xtakeWhile","generated":{"line":47,"column":106},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":80}},{"generated":{"line":47,"column":126},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":51}},{"generated":{"line":47,"column":128},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":93}},{"name":"takeWhile","generated":{"line":47,"column":137},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":102}},{"generated":{"line":47,"column":146},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":93}},{"name":"fn","generated":{"line":47,"column":147},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":112}},{"generated":{"line":47,"column":149},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":93}},{"name":"xs","generated":{"line":47,"column":151},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":116}},{"generated":{"line":47,"column":153},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":93}},{"generated":{"line":47,"column":155},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":120}},{"generated":{"line":48,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":36,"column":2}},{"name":"idx","generated":{"line":48,"column":6},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":36,"column":6}},{"generated":{"line":48,"column":9},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":36,"column":9}},{"generated":{"line":48,"column":12},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":36,"column":12}},{"generated":{"line":48,"column":13},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":36,"column":2}},{"generated":{"line":49,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":37,"column":2}},{"name":"len","generated":{"line":49,"column":6},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":37,"column":6}},{"generated":{"line":49,"column":9},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":37,"column":9}},{"name":"xs","generated":{"line":49,"column":12},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":37,"column":12}},{"generated":{"line":49,"column":14},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":37,"column":14}},{"name":"length","generated":{"line":49,"column":15},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":37,"column":15}},{"generated":{"line":49,"column":21},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":37,"column":2}},{"generated":{"line":51,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":2}},{"name":"idx","generated":{"line":51,"column":9},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":9}},{"generated":{"line":51,"column":12},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":12}},{"name":"len","generated":{"line":51,"column":15},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":15}},{"generated":{"line":51,"column":18},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":9}},{"name":"fn","generated":{"line":51,"column":22},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":22}},{"generated":{"line":51,"column":24},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":24}},{"name":"xs","generated":{"line":51,"column":25},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":25}},{"generated":{"line":51,"column":27},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":27}},{"name":"idx","generated":{"line":51,"column":28},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":28}},{"generated":{"line":51,"column":31},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":27}},{"generated":{"line":51,"column":32},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":24}},{"generated":{"line":51,"column":33},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":2}},{"generated":{"line":51,"column":35},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":38,"column":35}},{"name":"idx","generated":{"line":52,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":39,"column":4}},{"name":"idx","generated":{"line":52,"column":4},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":39,"column":4}},{"generated":{"line":52,"column":7},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":39,"column":7}},{"generated":{"line":52,"column":11},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":39,"column":11}},{"generated":{"line":52,"column":12},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":39,"column":4}},{"generated":{"line":53,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":40,"column":3}},{"generated":{"line":55,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":2}},{"generated":{"line":55,"column":9},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":9}},{"generated":{"line":55,"column":29},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":15}},{"generated":{"line":55,"column":30},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":9}},{"name":"idx","generated":{"line":55,"column":32},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":18}},{"generated":{"line":55,"column":35},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":9}},{"name":"xs","generated":{"line":55,"column":37},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":23}},{"generated":{"line":55,"column":39},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":9}},{"generated":{"line":55,"column":40},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":41,"column":2}},{"generated":{"line":56,"column":0},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":42,"column":1}},{"generated":{"line":56,"column":1},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":51}},{"generated":{"line":56,"column":2},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":29}},{"generated":{"line":56,"column":3},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":35,"column":0}},{"name":"takeWhile","generated":{"line":57,"column":15},"source":"../../node_modules/ramda/es/takeWhile.js","original":{"line":43,"column":15}}],"sources":{"../../node_modules/ramda/es/takeWhile.js":"import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xtakeWhile from './internal/_xtakeWhile.js';\nimport slice from './slice.js';\n\n/**\n * Returns a new list containing the first `n` elements of a given list,\n * passing each value to the supplied predicate function, and terminating when\n * the predicate function returns `false`. Excludes the element that caused the\n * predicate function to fail. The predicate function is passed one argument:\n * *(value)*.\n *\n * Dispatches to the `takeWhile` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> [a]\n * @sig (a -> Boolean) -> String -> String\n * @param {Function} fn The function called per iteration.\n * @param {Array} xs The collection to iterate over.\n * @return {Array} A new array.\n * @see R.dropWhile, R.transduce, R.addIndex\n * @example\n *\n *      const isNotFour = x => x !== 4;\n *\n *      R.takeWhile(isNotFour, [1, 2, 3, 4, 3, 2, 1]); //=> [1, 2, 3]\n *\n *      R.takeWhile(x => x !== 'd' , 'Ramda'); //=> 'Ram'\n */\nvar takeWhile = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['takeWhile'], _xtakeWhile, function takeWhile(fn, xs) {\n  var idx = 0;\n  var len = xs.length;\n  while (idx < len && fn(xs[idx])) {\n    idx += 1;\n  }\n  return slice(0, idx, xs);\n}));\nexport default takeWhile;"},"lineCount":null}},"error":null,"hash":"b738a68ecef30e1db42dc625652a49a1","cacheData":{"env":{}}}