{"id":"GY8n","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./_isArray.js","loc":{"line":1,"column":21},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_checkForMethod.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_isArray.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=t;var e=r(require(\"./_isArray.js\"));function r(e){return e&&e.__esModule?e:{default:e}}function t(r,t){return function(){var u=arguments.length;if(0===u)return t();var n=arguments[u-1];return(0,e.default)(n)||\"function\"!=typeof n[r]?t.apply(this,arguments):n[r].apply(n,Array.prototype.slice.call(arguments,0,u-1))}}"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":13}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":20}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":35}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":43}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":56}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":57}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":64}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":68}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":76}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":84}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":1,"column":0},"generated":{"line":1,"column":86}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":1,"column":0},"generated":{"line":1,"column":90}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":1,"column":0},"generated":{"line":1,"column":92}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":1,"column":0},"generated":{"line":1,"column":94}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":1,"column":0},"generated":{"line":1,"column":102}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":120}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":129}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":131}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":134}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":141}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":144}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":146}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":157}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":159}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":160}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":22,"column":1},"generated":{"line":1,"column":168}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":13,"column":15},"generated":{"line":1,"column":171}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"_checkForMethod","original":{"line":13,"column":24},"generated":{"line":1,"column":180}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"methodname","original":{"line":13,"column":40},"generated":{"line":1,"column":182}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"fn","original":{"line":13,"column":52},"generated":{"line":1,"column":184}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":14,"column":9},"generated":{"line":1,"column":187}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":14,"column":9},"generated":{"line":1,"column":194}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"length","original":{"line":15,"column":8},"generated":{"line":1,"column":205}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"length","original":{"line":15,"column":8},"generated":{"line":1,"column":209}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"arguments","original":{"line":15,"column":17},"generated":{"line":1,"column":211}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"length","original":{"line":15,"column":27},"generated":{"line":1,"column":221}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"length","original":{"line":16,"column":8},"generated":{"line":1,"column":228}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":16,"column":19},"generated":{"line":1,"column":231}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"length","original":{"line":16,"column":8},"generated":{"line":1,"column":235}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"fn","original":{"line":17,"column":13},"generated":{"line":1,"column":237}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"fn","original":{"line":17,"column":13},"generated":{"line":1,"column":244}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"obj","original":{"line":19,"column":8},"generated":{"line":1,"column":248}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"obj","original":{"line":19,"column":8},"generated":{"line":1,"column":252}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"arguments","original":{"line":19,"column":14},"generated":{"line":1,"column":254}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"length","original":{"line":19,"column":24},"generated":{"line":1,"column":264}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":19,"column":33},"generated":{"line":1,"column":266}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":20,"column":11},"generated":{"line":1,"column":269}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":20,"column":11},"generated":{"line":1,"column":276}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"obj","original":{"line":20,"column":20},"generated":{"line":1,"column":278}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"obj","original":{"line":20,"column":20},"generated":{"line":1,"column":280}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"obj","original":{"line":20,"column":20},"generated":{"line":1,"column":289}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":20,"column":55},"generated":{"line":1,"column":293}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"obj","original":{"line":20,"column":35},"generated":{"line":1,"column":312}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"methodname","original":{"line":20,"column":39},"generated":{"line":1,"column":314}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"fn","original":{"line":20,"column":68},"generated":{"line":1,"column":317}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"apply","original":{"line":20,"column":71},"generated":{"line":1,"column":319}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":20,"column":77},"generated":{"line":1,"column":325}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"arguments","original":{"line":20,"column":83},"generated":{"line":1,"column":330}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"obj","original":{"line":20,"column":96},"generated":{"line":1,"column":341}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"methodname","original":{"line":20,"column":100},"generated":{"line":1,"column":343}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"apply","original":{"line":20,"column":112},"generated":{"line":1,"column":346}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"obj","original":{"line":20,"column":118},"generated":{"line":1,"column":352}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"Array","original":{"line":20,"column":123},"generated":{"line":1,"column":354}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"prototype","original":{"line":20,"column":129},"generated":{"line":1,"column":360}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"slice","original":{"line":20,"column":139},"generated":{"line":1,"column":370}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"call","original":{"line":20,"column":145},"generated":{"line":1,"column":376}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"arguments","original":{"line":20,"column":150},"generated":{"line":1,"column":381}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":20,"column":161},"generated":{"line":1,"column":391}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","name":"length","original":{"line":20,"column":164},"generated":{"line":1,"column":393}},{"source":"../../node_modules/ramda/es/internal/_checkForMethod.js","original":{"line":20,"column":173},"generated":{"line":1,"column":395}}],"sources":{"../../node_modules/ramda/es/internal/_checkForMethod.js":"import _isArray from './_isArray.js';\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\nexport default function _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}"},"lineCount":null}},"error":null,"hash":"38a413319beec67adda4e04070134e1a","cacheData":{"env":{}}}