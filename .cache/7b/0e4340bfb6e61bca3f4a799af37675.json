{"id":"../../node_modules/ramda/es/symmetricDifference.js","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/symmetricDifference.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry2.js"},{"name":"./concat.js","loc":{"line":2,"column":19},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/symmetricDifference.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/concat.js"},{"name":"./difference.js","loc":{"line":3,"column":23},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/symmetricDifference.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/difference.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _concat = _interopRequireDefault(require(\"./concat.js\"));\n\nvar _difference = _interopRequireDefault(require(\"./difference.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/(0, _curry.default)(function symmetricDifference(list1, list2) {\n  return (0, _concat.default)((0, _difference.default)(list1, list2), (0, _difference.default)(list2, list1));\n});\nvar _default = symmetricDifference;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":5,"column":0}},{"generated":{"line":34,"column":0},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":0}},{"name":"symmetricDifference","generated":{"line":34,"column":4},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":4}},{"generated":{"line":34,"column":23},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":23}},{"generated":{"line":34,"column":26},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":26}},{"generated":{"line":34,"column":39},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":39}},{"generated":{"line":34,"column":59},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":47}},{"name":"symmetricDifference","generated":{"line":34,"column":68},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":56}},{"generated":{"line":34,"column":87},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":47}},{"name":"list1","generated":{"line":34,"column":88},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":76}},{"generated":{"line":34,"column":93},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":47}},{"name":"list2","generated":{"line":34,"column":95},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":83}},{"generated":{"line":34,"column":100},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":47}},{"generated":{"line":34,"column":102},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":90}},{"generated":{"line":35,"column":0},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":2}},{"generated":{"line":35,"column":9},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":9}},{"generated":{"line":35,"column":30},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":16}},{"name":"list1","generated":{"line":35,"column":55},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":27}},{"generated":{"line":35,"column":60},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":16}},{"name":"list2","generated":{"line":35,"column":62},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":34}},{"generated":{"line":35,"column":67},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":16}},{"generated":{"line":35,"column":68},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":9}},{"generated":{"line":35,"column":70},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":42}},{"name":"list2","generated":{"line":35,"column":95},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":53}},{"generated":{"line":35,"column":100},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":42}},{"name":"list1","generated":{"line":35,"column":102},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":60}},{"generated":{"line":35,"column":107},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":42}},{"generated":{"line":35,"column":108},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":9}},{"generated":{"line":35,"column":109},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":24,"column":2}},{"generated":{"line":36,"column":0},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":25,"column":1}},{"generated":{"line":36,"column":1},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":39}},{"generated":{"line":36,"column":2},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":23,"column":0}},{"name":"symmetricDifference","generated":{"line":37,"column":15},"source":"../../node_modules/ramda/es/symmetricDifference.js","original":{"line":26,"column":15}}],"sources":{"../../node_modules/ramda/es/symmetricDifference.js":"import _curry2 from './internal/_curry2.js';\nimport concat from './concat.js';\nimport difference from './difference.js';\n\n/**\n * Finds the set (i.e. no duplicates) of all elements contained in the first or\n * second list, but not both.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` or `list2`, but not both.\n * @see R.symmetricDifferenceWith, R.difference, R.differenceWith\n * @example\n *\n *      R.symmetricDifference([1,2,3,4], [7,6,5,4,3]); //=> [1,2,7,6,5]\n *      R.symmetricDifference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5,1,2]\n */\nvar symmetricDifference = /*#__PURE__*/_curry2(function symmetricDifference(list1, list2) {\n  return concat(difference(list1, list2), difference(list2, list1));\n});\nexport default symmetricDifference;"},"lineCount":null}},"error":null,"hash":"9d2cae26094d5034176d20cd98519278","cacheData":{"env":{}}}