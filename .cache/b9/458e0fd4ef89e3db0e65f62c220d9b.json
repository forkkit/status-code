{"id":"zbwQ","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_concat.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/unionWith.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_concat.js"},{"name":"./internal/_curry3.js","loc":{"line":2,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/unionWith.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry3.js"},{"name":"./uniqWith.js","loc":{"line":3,"column":21},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/unionWith.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/uniqWith.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=u(require(\"./internal/_concat.js\")),r=u(require(\"./internal/_curry3.js\")),t=u(require(\"./uniqWith.js\"));function u(e){return e&&e.__esModule?e:{default:e}}var n=(0,r.default)(function(r,u,n){return(0,t.default)(r,(0,e.default)(u,n))}),a=n;exports.default=a;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":13}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":20}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":35}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":43}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":56}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":57}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":64}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":68}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":76}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":89}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":133}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":135}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":137}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":145}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":3,"column":0},"generated":{"line":1,"column":171}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":3,"column":0},"generated":{"line":1,"column":173}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":3,"column":0},"generated":{"line":1,"column":175}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":3,"column":0},"generated":{"line":1,"column":183}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":201}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":210}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":212}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":215}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":222}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":225}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":227}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":238}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":240}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":241}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":249}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":27,"column":0},"generated":{"line":1,"column":252}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":27,"column":4},"generated":{"line":1,"column":256}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":27,"column":29},"generated":{"line":1,"column":259}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":27,"column":37},"generated":{"line":1,"column":261}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":27,"column":37},"generated":{"line":1,"column":263}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":27,"column":37},"generated":{"line":1,"column":272}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"pred","original":{"line":27,"column":56},"generated":{"line":1,"column":281}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"list1","original":{"line":27,"column":62},"generated":{"line":1,"column":283}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"list2","original":{"line":27,"column":69},"generated":{"line":1,"column":285}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":28,"column":9},"generated":{"line":1,"column":288}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":28,"column":9},"generated":{"line":1,"column":295}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"pred","original":{"line":28,"column":18},"generated":{"line":1,"column":297}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"pred","original":{"line":28,"column":18},"generated":{"line":1,"column":299}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"pred","original":{"line":28,"column":18},"generated":{"line":1,"column":308}},{"source":"../../node_modules/ramda/es/unionWith.js","original":{"line":28,"column":24},"generated":{"line":1,"column":311}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"list1","original":{"line":28,"column":32},"generated":{"line":1,"column":313}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"list1","original":{"line":28,"column":32},"generated":{"line":1,"column":315}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"list1","original":{"line":28,"column":32},"generated":{"line":1,"column":324}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"list2","original":{"line":28,"column":39},"generated":{"line":1,"column":326}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":332}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":334}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":336}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":344}},{"source":"../../node_modules/ramda/es/unionWith.js","name":"unionWith","original":{"line":30,"column":15},"generated":{"line":1,"column":352}}],"sources":{"../../node_modules/ramda/es/unionWith.js":"import _concat from './internal/_concat.js';\nimport _curry3 from './internal/_curry3.js';\nimport uniqWith from './uniqWith.js';\n\n/**\n * Combines two lists into a set (i.e. no duplicates) composed of the elements\n * of each list. Duplication is determined according to the value returned by\n * applying the supplied predicate to two list elements.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig ((a, a) -> Boolean) -> [*] -> [*] -> [*]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The first and second lists concatenated, with\n *         duplicates removed.\n * @see R.union\n * @example\n *\n *      const l1 = [{a: 1}, {a: 2}];\n *      const l2 = [{a: 1}, {a: 4}];\n *      R.unionWith(R.eqBy(R.prop('a')), l1, l2); //=> [{a: 1}, {a: 2}, {a: 4}]\n */\nvar unionWith = /*#__PURE__*/_curry3(function unionWith(pred, list1, list2) {\n  return uniqWith(pred, _concat(list1, list2));\n});\nexport default unionWith;"},"lineCount":null}},"error":null,"hash":"c58736668419084da2acc8f6a99ca5d4","cacheData":{"env":{}}}