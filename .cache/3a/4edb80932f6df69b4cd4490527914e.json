{"id":"../../node_modules/ramda/es/tail.js","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_checkForMethod.js","loc":{"line":1,"column":28},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/tail.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_checkForMethod.js"},{"name":"./internal/_curry1.js","loc":{"line":2,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/tail.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry1.js"},{"name":"./slice.js","loc":{"line":3,"column":18},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/tail.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/slice.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _checkForMethod2 = _interopRequireDefault(require(\"./internal/_checkForMethod.js\"));\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry1.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/(0, _curry.default)( /*#__PURE__*/(0, _checkForMethod2.default)('tail', /*#__PURE__*/(0, _slice.default)(1, Infinity)));\nvar _default = tail;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/ramda/es/tail.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/ramda/es/tail.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/ramda/es/tail.js","original":{"line":3,"column":0}},{"generated":{"line":16,"column":0},"source":"../../node_modules/ramda/es/tail.js","original":{"line":5,"column":0}},{"generated":{"line":43,"column":0},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":0}},{"name":"tail","generated":{"line":43,"column":4},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":4}},{"generated":{"line":43,"column":8},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":8}},{"generated":{"line":43,"column":11},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":11}},{"generated":{"line":43,"column":24},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":24}},{"generated":{"line":43,"column":45},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":33}},{"generated":{"line":43,"column":58},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":46}},{"generated":{"line":43,"column":88},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":62}},{"generated":{"line":43,"column":94},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":46}},{"generated":{"line":43,"column":96},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":70}},{"generated":{"line":43,"column":109},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":83}},{"generated":{"line":43,"column":129},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":89}},{"generated":{"line":43,"column":130},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":83}},{"name":"Infinity","generated":{"line":43,"column":132},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":92}},{"generated":{"line":43,"column":140},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":83}},{"generated":{"line":43,"column":141},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":46}},{"generated":{"line":43,"column":142},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":24}},{"generated":{"line":43,"column":143},"source":"../../node_modules/ramda/es/tail.js","original":{"line":32,"column":0}},{"name":"tail","generated":{"line":44,"column":15},"source":"../../node_modules/ramda/es/tail.js","original":{"line":33,"column":15}}],"sources":{"../../node_modules/ramda/es/tail.js":"import _checkForMethod from './internal/_checkForMethod.js';\nimport _curry1 from './internal/_curry1.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first element of the given list or string (or object\n * with a `tail` method).\n *\n * Dispatches to the `slice` method of the first argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [a]\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.head, R.init, R.last\n * @example\n *\n *      R.tail([1, 2, 3]);  //=> [2, 3]\n *      R.tail([1, 2]);     //=> [2]\n *      R.tail([1]);        //=> []\n *      R.tail([]);         //=> []\n *\n *      R.tail('abc');  //=> 'bc'\n *      R.tail('ab');   //=> 'b'\n *      R.tail('a');    //=> ''\n *      R.tail('');     //=> ''\n */\nvar tail = /*#__PURE__*/_curry1( /*#__PURE__*/_checkForMethod('tail', /*#__PURE__*/slice(1, Infinity)));\nexport default tail;"},"lineCount":null}},"error":null,"hash":"4cb8f927b0226991afd9267df6f59d9f","cacheData":{"env":{}}}