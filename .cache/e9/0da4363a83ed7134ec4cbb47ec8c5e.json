{"id":"../../node_modules/ramda/es/drop.js","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/drop.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry2.js"},{"name":"./internal/_dispatchable.js","loc":{"line":2,"column":26},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/drop.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_dispatchable.js"},{"name":"./internal/_xdrop.js","loc":{"line":3,"column":19},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/drop.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_xdrop.js"},{"name":"./slice.js","loc":{"line":4,"column":18},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/drop.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/slice.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nvar _dispatchable2 = _interopRequireDefault(require(\"./internal/_dispatchable.js\"));\n\nvar _xdrop2 = _interopRequireDefault(require(\"./internal/_xdrop.js\"));\n\nvar _slice = _interopRequireDefault(require(\"./slice.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/(0, _curry.default)( /*#__PURE__*/(0, _dispatchable2.default)(['drop'], _xdrop2.default, function drop(n, xs) {\n  return (0, _slice.default)(Math.max(0, n), Infinity, xs);\n}));\nvar _default = drop;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/ramda/es/drop.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"../../node_modules/ramda/es/drop.js","original":{"line":2,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/ramda/es/drop.js","original":{"line":3,"column":0}},{"generated":{"line":14,"column":0},"source":"../../node_modules/ramda/es/drop.js","original":{"line":4,"column":0}},{"generated":{"line":18,"column":0},"source":"../../node_modules/ramda/es/drop.js","original":{"line":6,"column":0}},{"generated":{"line":42,"column":0},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":0}},{"name":"drop","generated":{"line":42,"column":4},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":4}},{"generated":{"line":42,"column":8},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":8}},{"generated":{"line":42,"column":11},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":11}},{"generated":{"line":42,"column":24},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":24}},{"generated":{"line":42,"column":45},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":33}},{"generated":{"line":42,"column":58},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":46}},{"generated":{"line":42,"column":86},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":60}},{"generated":{"line":42,"column":87},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":61}},{"generated":{"line":42,"column":93},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":60}},{"generated":{"line":42,"column":94},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":46}},{"name":"_xdrop","generated":{"line":42,"column":96},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":70}},{"generated":{"line":42,"column":111},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":46}},{"generated":{"line":42,"column":113},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":78}},{"name":"drop","generated":{"line":42,"column":122},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":87}},{"generated":{"line":42,"column":126},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":78}},{"name":"n","generated":{"line":42,"column":127},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":92}},{"generated":{"line":42,"column":128},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":78}},{"name":"xs","generated":{"line":42,"column":130},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":95}},{"generated":{"line":42,"column":132},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":78}},{"generated":{"line":42,"column":134},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":99}},{"generated":{"line":43,"column":0},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":2}},{"generated":{"line":43,"column":9},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":9}},{"name":"Math","generated":{"line":43,"column":29},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":15}},{"generated":{"line":43,"column":33},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":19}},{"name":"max","generated":{"line":43,"column":34},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":20}},{"generated":{"line":43,"column":37},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":15}},{"generated":{"line":43,"column":38},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":24}},{"generated":{"line":43,"column":39},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":15}},{"name":"n","generated":{"line":43,"column":41},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":27}},{"generated":{"line":43,"column":42},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":15}},{"generated":{"line":43,"column":43},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":9}},{"name":"Infinity","generated":{"line":43,"column":45},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":31}},{"generated":{"line":43,"column":53},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":9}},{"name":"xs","generated":{"line":43,"column":55},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":41}},{"generated":{"line":43,"column":57},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":9}},{"generated":{"line":43,"column":58},"source":"../../node_modules/ramda/es/drop.js","original":{"line":31,"column":2}},{"generated":{"line":44,"column":0},"source":"../../node_modules/ramda/es/drop.js","original":{"line":32,"column":1}},{"generated":{"line":44,"column":1},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":46}},{"generated":{"line":44,"column":2},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":24}},{"generated":{"line":44,"column":3},"source":"../../node_modules/ramda/es/drop.js","original":{"line":30,"column":0}},{"name":"drop","generated":{"line":45,"column":15},"source":"../../node_modules/ramda/es/drop.js","original":{"line":33,"column":15}}],"sources":{"../../node_modules/ramda/es/drop.js":"import _curry2 from './internal/_curry2.js';\nimport _dispatchable from './internal/_dispatchable.js';\nimport _xdrop from './internal/_xdrop.js';\nimport slice from './slice.js';\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nexport default drop;"},"lineCount":null}},"error":null,"hash":"70e42e8637858cd8e25829020a978331","cacheData":{"env":{}}}