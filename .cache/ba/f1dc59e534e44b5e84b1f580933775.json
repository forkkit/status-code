{"id":"Xmfq","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/startsWith.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry2.js"},{"name":"./equals.js","loc":{"line":2,"column":19},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/startsWith.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/equals.js"},{"name":"./take.js","loc":{"line":3,"column":17},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/startsWith.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/take.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=u(require(\"./internal/_curry2.js\")),r=u(require(\"./equals.js\")),t=u(require(\"./take.js\"));function u(e){return e&&e.__esModule?e:{default:e}}var a=(0,e.default)(function(e,u){return(0,r.default)((0,t.default)(e.length,u),e)}),l=a;exports.default=l;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":13}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":20}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":35}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":43}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":56}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":57}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":64}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":68}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":76}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":89}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":133}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":135}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":137}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":2,"column":0},"generated":{"line":1,"column":145}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":3,"column":0},"generated":{"line":1,"column":161}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":3,"column":0},"generated":{"line":1,"column":163}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":3,"column":0},"generated":{"line":1,"column":165}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":3,"column":0},"generated":{"line":1,"column":173}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":187}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":196}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":198}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":201}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":208}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":211}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":213}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":224}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":226}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":227}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":235}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":27,"column":0},"generated":{"line":1,"column":238}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":27,"column":4},"generated":{"line":1,"column":242}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":27,"column":30},"generated":{"line":1,"column":245}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":27,"column":38},"generated":{"line":1,"column":247}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":27,"column":38},"generated":{"line":1,"column":249}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":27,"column":38},"generated":{"line":1,"column":258}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"prefix","original":{"line":27,"column":48},"generated":{"line":1,"column":267}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"list","original":{"line":27,"column":56},"generated":{"line":1,"column":269}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":28,"column":9},"generated":{"line":1,"column":272}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":28,"column":9},"generated":{"line":1,"column":279}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":28,"column":16},"generated":{"line":1,"column":281}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":28,"column":16},"generated":{"line":1,"column":283}},{"source":"../../node_modules/ramda/es/startsWith.js","original":{"line":28,"column":16},"generated":{"line":1,"column":293}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"prefix","original":{"line":28,"column":21},"generated":{"line":1,"column":295}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"prefix","original":{"line":28,"column":21},"generated":{"line":1,"column":297}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"prefix","original":{"line":28,"column":21},"generated":{"line":1,"column":306}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"length","original":{"line":28,"column":28},"generated":{"line":1,"column":308}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"list","original":{"line":28,"column":36},"generated":{"line":1,"column":315}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"prefix","original":{"line":28,"column":43},"generated":{"line":1,"column":318}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":323}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":325}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":327}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":335}},{"source":"../../node_modules/ramda/es/startsWith.js","name":"startsWith","original":{"line":30,"column":15},"generated":{"line":1,"column":343}}],"sources":{"../../node_modules/ramda/es/startsWith.js":"import _curry2 from './internal/_curry2.js';\nimport equals from './equals.js';\nimport take from './take.js';\n\n/**\n * Checks if a list starts with the provided sublist.\n *\n * Similarly, checks if a string starts with the provided substring.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category List\n * @sig [a] -> [a] -> Boolean\n * @sig String -> String -> Boolean\n * @param {*} prefix\n * @param {*} list\n * @return {Boolean}\n * @see R.endsWith\n * @example\n *\n *      R.startsWith('a', 'abc')                //=> true\n *      R.startsWith('b', 'abc')                //=> false\n *      R.startsWith(['a'], ['a', 'b', 'c'])    //=> true\n *      R.startsWith(['b'], ['a', 'b', 'c'])    //=> false\n */\nvar startsWith = /*#__PURE__*/_curry2(function (prefix, list) {\n  return equals(take(prefix.length, list), prefix);\n});\nexport default startsWith;"},"lineCount":null}},"error":null,"hash":"4a3214cf9f53965ab1bf6722598ad6c6","cacheData":{"env":{}}}