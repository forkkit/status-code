{"id":"nP5J","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/type.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry1.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=t(require(\"./internal/_curry1.js\"));function t(e){return e&&e.__esModule?e:{default:e}}var r=(0,e.default)(function(e){return null===e?\"Null\":void 0===e?\"Undefined\":Object.prototype.toString.call(e).slice(8,-1)}),u=r;exports.default=u;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":13}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":20}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":35}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":43}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":56}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":57}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":64}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":68}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":76}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":89}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":133}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":142}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":144}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":147}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":154}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":157}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":159}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":170}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":172}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":173}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":181}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":28,"column":0},"generated":{"line":1,"column":184}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":28,"column":4},"generated":{"line":1,"column":188}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":28,"column":24},"generated":{"line":1,"column":191}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":28,"column":32},"generated":{"line":1,"column":193}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":28,"column":32},"generated":{"line":1,"column":195}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":28,"column":32},"generated":{"line":1,"column":204}},{"source":"../../node_modules/ramda/es/type.js","name":"val","original":{"line":28,"column":46},"generated":{"line":1,"column":213}},{"source":"../../node_modules/ramda/es/type.js","name":"val","original":{"line":29,"column":9},"generated":{"line":1,"column":216}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":29,"column":17},"generated":{"line":1,"column":223}},{"source":"../../node_modules/ramda/es/type.js","name":"val","original":{"line":29,"column":9},"generated":{"line":1,"column":230}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":29,"column":24},"generated":{"line":1,"column":232}},{"source":"../../node_modules/ramda/es/type.js","name":"undefined","original":{"line":29,"column":41},"generated":{"line":1,"column":244}},{"source":"../../node_modules/ramda/es/type.js","name":"val","original":{"line":29,"column":33},"generated":{"line":1,"column":248}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":29,"column":53},"generated":{"line":1,"column":250}},{"source":"../../node_modules/ramda/es/type.js","name":"Object","original":{"line":29,"column":67},"generated":{"line":1,"column":262}},{"source":"../../node_modules/ramda/es/type.js","name":"prototype","original":{"line":29,"column":74},"generated":{"line":1,"column":269}},{"source":"../../node_modules/ramda/es/type.js","name":"toString","original":{"line":29,"column":84},"generated":{"line":1,"column":279}},{"source":"../../node_modules/ramda/es/type.js","name":"call","original":{"line":29,"column":93},"generated":{"line":1,"column":288}},{"source":"../../node_modules/ramda/es/type.js","name":"val","original":{"line":29,"column":98},"generated":{"line":1,"column":293}},{"source":"../../node_modules/ramda/es/type.js","name":"slice","original":{"line":29,"column":103},"generated":{"line":1,"column":296}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":29,"column":109},"generated":{"line":1,"column":302}},{"source":"../../node_modules/ramda/es/type.js","original":{"line":29,"column":113},"generated":{"line":1,"column":305}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":310}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":312}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":314}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":322}},{"source":"../../node_modules/ramda/es/type.js","name":"type","original":{"line":31,"column":15},"generated":{"line":1,"column":330}}],"sources":{"../../node_modules/ramda/es/type.js":"import _curry1 from './internal/_curry1.js';\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nexport default type;"},"lineCount":null}},"error":null,"hash":"c01986e5f15bd4cb9ad8e3bf49557cfa","cacheData":{"env":{}}}