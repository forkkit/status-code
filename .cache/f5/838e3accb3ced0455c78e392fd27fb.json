{"id":"iUc4","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry1.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/unary.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry1.js"},{"name":"./nAry.js","loc":{"line":2,"column":17},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/unary.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/nAry.js"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=void 0;var e=t(require(\"./internal/_curry1.js\")),r=t(require(\"./nAry.js\"));function t(e){return e&&e.__esModule?e:{default:e}}var u=(0,e.default)(function(e){return(0,r.default)(1,e)}),n=u;exports.default=n;"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":0}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":13}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":20}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":35}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":43}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":56}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":57}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":64}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":68}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":76}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":89}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":1,"column":0},"generated":{"line":1,"column":91}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":1,"column":0},"generated":{"line":1,"column":95}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":1,"column":0},"generated":{"line":1,"column":97}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":1,"column":0},"generated":{"line":1,"column":99}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":1,"column":0},"generated":{"line":1,"column":107}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":2,"column":0},"generated":{"line":1,"column":133}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":2,"column":0},"generated":{"line":1,"column":135}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":2,"column":0},"generated":{"line":1,"column":137}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":2,"column":0},"generated":{"line":1,"column":145}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":159}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":168}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":170}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":173}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":180}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":183}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":185}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":196}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":198}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":199}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":207}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":32,"column":0},"generated":{"line":1,"column":210}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":32,"column":4},"generated":{"line":1,"column":214}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":32,"column":25},"generated":{"line":1,"column":217}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":32,"column":33},"generated":{"line":1,"column":219}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":32,"column":33},"generated":{"line":1,"column":221}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":32,"column":33},"generated":{"line":1,"column":230}},{"source":"../../node_modules/ramda/es/unary.js","name":"fn","original":{"line":32,"column":48},"generated":{"line":1,"column":239}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":33,"column":9},"generated":{"line":1,"column":242}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":33,"column":9},"generated":{"line":1,"column":249}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":33,"column":14},"generated":{"line":1,"column":251}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":33,"column":14},"generated":{"line":1,"column":253}},{"source":"../../node_modules/ramda/es/unary.js","original":{"line":33,"column":14},"generated":{"line":1,"column":262}},{"source":"../../node_modules/ramda/es/unary.js","name":"fn","original":{"line":33,"column":17},"generated":{"line":1,"column":264}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":269}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":271}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":273}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":281}},{"source":"../../node_modules/ramda/es/unary.js","name":"unary","original":{"line":35,"column":15},"generated":{"line":1,"column":289}}],"sources":{"../../node_modules/ramda/es/unary.js":"import _curry1 from './internal/_curry1.js';\nimport nAry from './nAry.js';\n\n/**\n * Wraps a function of any arity (including nullary) in a function that accepts\n * exactly 1 parameter. Any extraneous parameters will not be passed to the\n * supplied function.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Function\n * @sig (* -> b) -> (a -> b)\n * @param {Function} fn The function to wrap.\n * @return {Function} A new function wrapping `fn`. The new function is guaranteed to be of\n *         arity 1.\n * @see R.binary, R.nAry\n * @example\n *\n *      const takesTwoArgs = function(a, b) {\n *        return [a, b];\n *      };\n *      takesTwoArgs.length; //=> 2\n *      takesTwoArgs(1, 2); //=> [1, 2]\n *\n *      const takesOneArg = R.unary(takesTwoArgs);\n *      takesOneArg.length; //=> 1\n *      // Only 1 argument is passed to the wrapped function\n *      takesOneArg(1, 2); //=> [1, undefined]\n * @symb R.unary(f)(a, b, c) = f(a)\n */\nvar unary = /*#__PURE__*/_curry1(function unary(fn) {\n  return nAry(1, fn);\n});\nexport default unary;"},"lineCount":null}},"error":null,"hash":"bddb86e0fb34e655fe48cb0a061ab5cb","cacheData":{"env":{}}}