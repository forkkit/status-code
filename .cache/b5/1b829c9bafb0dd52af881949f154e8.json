{"id":"../../node_modules/ramda/es/scan.js","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry3.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/scan.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry3.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry3.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/(0, _curry.default)(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n\n  return result;\n});\nvar _default = scan;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":3,"column":0}},{"generated":{"line":33,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":0}},{"name":"scan","generated":{"line":33,"column":4},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":4}},{"generated":{"line":33,"column":8},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":8}},{"generated":{"line":33,"column":11},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":11}},{"generated":{"line":33,"column":24},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":24}},{"generated":{"line":33,"column":44},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":32}},{"name":"scan","generated":{"line":33,"column":53},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":41}},{"generated":{"line":33,"column":57},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":32}},{"name":"fn","generated":{"line":33,"column":58},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":46}},{"generated":{"line":33,"column":60},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":32}},{"name":"acc","generated":{"line":33,"column":62},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":50}},{"generated":{"line":33,"column":65},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":32}},{"name":"list","generated":{"line":33,"column":67},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":55}},{"generated":{"line":33,"column":71},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":32}},{"generated":{"line":33,"column":73},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":61}},{"generated":{"line":34,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":25,"column":2}},{"name":"idx","generated":{"line":34,"column":6},"source":"../../node_modules/ramda/es/scan.js","original":{"line":25,"column":6}},{"generated":{"line":34,"column":9},"source":"../../node_modules/ramda/es/scan.js","original":{"line":25,"column":9}},{"generated":{"line":34,"column":12},"source":"../../node_modules/ramda/es/scan.js","original":{"line":25,"column":12}},{"generated":{"line":34,"column":13},"source":"../../node_modules/ramda/es/scan.js","original":{"line":25,"column":2}},{"generated":{"line":35,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":26,"column":2}},{"name":"len","generated":{"line":35,"column":6},"source":"../../node_modules/ramda/es/scan.js","original":{"line":26,"column":6}},{"generated":{"line":35,"column":9},"source":"../../node_modules/ramda/es/scan.js","original":{"line":26,"column":9}},{"name":"list","generated":{"line":35,"column":12},"source":"../../node_modules/ramda/es/scan.js","original":{"line":26,"column":12}},{"generated":{"line":35,"column":16},"source":"../../node_modules/ramda/es/scan.js","original":{"line":26,"column":16}},{"name":"length","generated":{"line":35,"column":17},"source":"../../node_modules/ramda/es/scan.js","original":{"line":26,"column":17}},{"generated":{"line":35,"column":23},"source":"../../node_modules/ramda/es/scan.js","original":{"line":26,"column":2}},{"generated":{"line":36,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":27,"column":2}},{"name":"result","generated":{"line":36,"column":6},"source":"../../node_modules/ramda/es/scan.js","original":{"line":27,"column":6}},{"generated":{"line":36,"column":12},"source":"../../node_modules/ramda/es/scan.js","original":{"line":27,"column":12}},{"generated":{"line":36,"column":15},"source":"../../node_modules/ramda/es/scan.js","original":{"line":27,"column":15}},{"name":"acc","generated":{"line":36,"column":16},"source":"../../node_modules/ramda/es/scan.js","original":{"line":27,"column":16}},{"generated":{"line":36,"column":19},"source":"../../node_modules/ramda/es/scan.js","original":{"line":27,"column":15}},{"generated":{"line":36,"column":20},"source":"../../node_modules/ramda/es/scan.js","original":{"line":27,"column":2}},{"generated":{"line":38,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":28,"column":2}},{"name":"idx","generated":{"line":38,"column":9},"source":"../../node_modules/ramda/es/scan.js","original":{"line":28,"column":9}},{"generated":{"line":38,"column":12},"source":"../../node_modules/ramda/es/scan.js","original":{"line":28,"column":12}},{"name":"len","generated":{"line":38,"column":15},"source":"../../node_modules/ramda/es/scan.js","original":{"line":28,"column":15}},{"generated":{"line":38,"column":18},"source":"../../node_modules/ramda/es/scan.js","original":{"line":28,"column":2}},{"generated":{"line":38,"column":20},"source":"../../node_modules/ramda/es/scan.js","original":{"line":28,"column":20}},{"name":"acc","generated":{"line":39,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":4}},{"name":"acc","generated":{"line":39,"column":4},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":4}},{"generated":{"line":39,"column":7},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":7}},{"name":"fn","generated":{"line":39,"column":10},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":10}},{"generated":{"line":39,"column":12},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":12}},{"name":"acc","generated":{"line":39,"column":13},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":13}},{"generated":{"line":39,"column":16},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":12}},{"name":"list","generated":{"line":39,"column":18},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":18}},{"generated":{"line":39,"column":22},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":22}},{"name":"idx","generated":{"line":39,"column":23},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":23}},{"generated":{"line":39,"column":26},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":22}},{"generated":{"line":39,"column":27},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":12}},{"generated":{"line":39,"column":28},"source":"../../node_modules/ramda/es/scan.js","original":{"line":29,"column":4}},{"name":"result","generated":{"line":40,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":4}},{"name":"result","generated":{"line":40,"column":4},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":4}},{"generated":{"line":40,"column":10},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":10}},{"name":"idx","generated":{"line":40,"column":11},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":11}},{"generated":{"line":40,"column":14},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":14}},{"generated":{"line":40,"column":17},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":17}},{"generated":{"line":40,"column":18},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":10}},{"generated":{"line":40,"column":19},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":4}},{"name":"acc","generated":{"line":40,"column":22},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":22}},{"generated":{"line":40,"column":25},"source":"../../node_modules/ramda/es/scan.js","original":{"line":30,"column":4}},{"name":"idx","generated":{"line":41,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":31,"column":4}},{"name":"idx","generated":{"line":41,"column":4},"source":"../../node_modules/ramda/es/scan.js","original":{"line":31,"column":4}},{"generated":{"line":41,"column":7},"source":"../../node_modules/ramda/es/scan.js","original":{"line":31,"column":7}},{"generated":{"line":41,"column":11},"source":"../../node_modules/ramda/es/scan.js","original":{"line":31,"column":11}},{"generated":{"line":41,"column":12},"source":"../../node_modules/ramda/es/scan.js","original":{"line":31,"column":4}},{"generated":{"line":42,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":32,"column":3}},{"generated":{"line":44,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":33,"column":2}},{"name":"result","generated":{"line":44,"column":9},"source":"../../node_modules/ramda/es/scan.js","original":{"line":33,"column":9}},{"generated":{"line":44,"column":15},"source":"../../node_modules/ramda/es/scan.js","original":{"line":33,"column":2}},{"generated":{"line":45,"column":0},"source":"../../node_modules/ramda/es/scan.js","original":{"line":34,"column":1}},{"generated":{"line":45,"column":1},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":24}},{"generated":{"line":45,"column":2},"source":"../../node_modules/ramda/es/scan.js","original":{"line":24,"column":0}},{"name":"scan","generated":{"line":46,"column":15},"source":"../../node_modules/ramda/es/scan.js","original":{"line":35,"column":15}}],"sources":{"../../node_modules/ramda/es/scan.js":"import _curry3 from './internal/_curry3.js';\n\n/**\n * Scan is similar to [`reduce`](#reduce), but returns a list of successively\n * reduced values from the left\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> [a]\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {Array} A list of all intermediately reduced values.\n * @see R.reduce, R.mapAccum\n * @example\n *\n *      const numbers = [1, 2, 3, 4];\n *      const factorials = R.scan(R.multiply, 1, numbers); //=> [1, 1, 2, 6, 24]\n * @symb R.scan(f, a, [b, c]) = [a, f(a, b), f(f(a, b), c)]\n */\nvar scan = /*#__PURE__*/_curry3(function scan(fn, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [acc];\n  while (idx < len) {\n    acc = fn(acc, list[idx]);\n    result[idx + 1] = acc;\n    idx += 1;\n  }\n  return result;\n});\nexport default scan;"},"lineCount":null}},"error":null,"hash":"bda3e0d86b67c80323bb7f93346ad232","cacheData":{"env":{}}}