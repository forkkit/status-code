{"id":"../../node_modules/ramda/es/max.js","dependencies":[{"name":"/Users/ryankubik/git/playground/hyperapp2-test/package.json","includedInParent":true,"mtime":1598205226168},{"name":"/Users/ryankubik/git/playground/hyperapp2-test/.babelrc","includedInParent":true,"mtime":1597523022671},{"name":"/Users/ryankubik/git/playground/node_modules/ramda/package.json","includedInParent":true,"mtime":1595832489236},{"name":"./internal/_curry2.js","loc":{"line":1,"column":20},"parent":"/Users/ryankubik/git/playground/node_modules/ramda/es/max.js","resolved":"/Users/ryankubik/git/playground/node_modules/ramda/es/internal/_curry2.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _curry = _interopRequireDefault(require(\"./internal/_curry2.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/(0, _curry.default)(function max(a, b) {\n  return b > a ? b : a;\n});\nvar _default = max;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../node_modules/ramda/es/max.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"../../node_modules/ramda/es/max.js","original":{"line":3,"column":0}},{"generated":{"line":29,"column":0},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":0}},{"name":"max","generated":{"line":29,"column":4},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":4}},{"generated":{"line":29,"column":7},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":7}},{"generated":{"line":29,"column":10},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":10}},{"generated":{"line":29,"column":23},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":23}},{"generated":{"line":29,"column":43},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":31}},{"name":"max","generated":{"line":29,"column":52},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":40}},{"generated":{"line":29,"column":55},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":31}},{"name":"a","generated":{"line":29,"column":56},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":44}},{"generated":{"line":29,"column":57},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":31}},{"name":"b","generated":{"line":29,"column":59},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":47}},{"generated":{"line":29,"column":60},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":31}},{"generated":{"line":29,"column":62},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":50}},{"generated":{"line":30,"column":0},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":2}},{"name":"b","generated":{"line":30,"column":9},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":9}},{"generated":{"line":30,"column":10},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":10}},{"name":"a","generated":{"line":30,"column":13},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":13}},{"generated":{"line":30,"column":14},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":9}},{"name":"b","generated":{"line":30,"column":17},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":17}},{"generated":{"line":30,"column":18},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":9}},{"name":"a","generated":{"line":30,"column":21},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":21}},{"generated":{"line":30,"column":22},"source":"../../node_modules/ramda/es/max.js","original":{"line":21,"column":2}},{"generated":{"line":31,"column":0},"source":"../../node_modules/ramda/es/max.js","original":{"line":22,"column":1}},{"generated":{"line":31,"column":1},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":23}},{"generated":{"line":31,"column":2},"source":"../../node_modules/ramda/es/max.js","original":{"line":20,"column":0}},{"name":"max","generated":{"line":32,"column":15},"source":"../../node_modules/ramda/es/max.js","original":{"line":23,"column":15}}],"sources":{"../../node_modules/ramda/es/max.js":"import _curry2 from './internal/_curry2.js';\n\n/**\n * Returns the larger of its two arguments.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig Ord a => a -> a -> a\n * @param {*} a\n * @param {*} b\n * @return {*}\n * @see R.maxBy, R.min\n * @example\n *\n *      R.max(789, 123); //=> 789\n *      R.max('a', 'b'); //=> 'b'\n */\nvar max = /*#__PURE__*/_curry2(function max(a, b) {\n  return b > a ? b : a;\n});\nexport default max;"},"lineCount":null}},"error":null,"hash":"d50da8b15fb0a4e256e7fab2f995992e","cacheData":{"env":{}}}